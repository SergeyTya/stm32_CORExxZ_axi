//*****************************************************************************
//
// IQmpy.S - Fixed point multiply
//
// Copyright (c) 2010 Texas Instruments Incorporated.  All rights reserved.
// TI Information - Selective Disclosure
//
//*****************************************************************************

//*****************************************************************************
//
// Function:   _IQNmpy
//
//*****************************************************************************
//
// C Usage:    extern long _IQmpy(long M, long X);   // no round or sat
//
//-----------------------------------------------------------------------------
//
// On Entry:   r0     = M in IQ format
//             r1     = X in IQ format
//
// Regs Used:  r0, r1
//
// On Exit:    r0     = M * X in IQ format
//
// Q range:    30 to 1
//
//-----------------------------------------------------------------------------
//
// Algorithm:  The IQmpy operation generates a 64-bit result. The 64-bit
//             number must then be scaled back to a 32-bit value with the
//             same Q value as the original inputs. For example: if Q = 27,
//             then the multiplication of two I5Q27 numbers results in the
//             following 64-bit value:
//
//                          I5Q27 * I5Q27 = I10Q54
//
//             The value is then scaled back to an I5Q27 value as follows:
//
//                          I5Q27 = I10Q54 >> Q
//
//             For some of the operations, the value is either rounded or
//             saturated (or both) to its maximum value before scaling.
//
//##### INTERNAL BEGIN #####
//-----------------------------------------------------------------------------
// Benchmark:
//
// Cycles = ??
//
//##### INTERNAL END #####
//*****************************************************************************
__PREAMBLE__
//$ BEGIN_UNROLL _QQ_ 1 to 30
//*****************************************************************************
//
// _IQ_QQ_mpy
//
//*****************************************************************************
    __SECTION__ _IQ_QQ_mpy
    __EXPORT__ _IQ_QQ_mpy__THUMB_LABEL__
_IQ_QQ_mpy__LABEL__
    //
    // Perform a 32x32-> 64 bit signed multiply
    //
    smull   r0, r1, r0, r1

    //
    // Shift the lower 32 bits of the result down by Q
    //
    lsr     r0, r0, #_QQ_

    //
    // Shift the upper 32 by ~Q
    // Add the upper and lower bits together
    //
    add     r0, r0, r1, lsl #(32 - _QQ_)

    //
    // Return to the caller.
    //
    bx      lr

    //
    // Make sure that the end of the section is word aligned.
    //
    __ALIGN__

//$ END_UNROLL _QQ_
    __END__
